using CryptoBase;
using CryptoBase.Abstractions.SymmetricCryptos;
using CryptoBase.BouncyCastle.SymmetricCryptos.StreamCryptos;
using CryptoBase.SymmetricCryptos.StreamCryptos.ChaCha20Original;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;

namespace UnitTest
{
	[TestClass]
	public class ChaCha20OriginalTest
	{
		private static void Test(SnuffleCryptoBase crypto, string inputHex, string outputHex)
		{
			Assert.AreEqual(@"ChaCha20Original", crypto.Name);
			Assert.AreEqual(8, crypto.IvSize);

			Span<byte> i = inputHex.FromHex();
			Span<byte> o = outputHex.FromHex();
			Span<byte> o1 = stackalloc byte[i.Length];

			crypto.Update(i, o1);
			Assert.IsTrue(o1.SequenceEqual(o));

			crypto.Reset();

			crypto.Update(i, o1);
			Assert.IsTrue(o1.SequenceEqual(o));

			crypto.Dispose();
		}

		[TestMethod]
		[DataRow(@"0A5DB00356A9FC4FA2F5489BEE4194E73A8DE03386D92C7FD22578CB1E71C417",
			@"1F86ED54BB2289F0",
			
			@"A2590E1FB8142241D7CDBAD75DA35762A2C71E2D5CD650FA5E090C91D9E3A2EF5550E94A5939ED559F0DBF5E802DA83AC340D5148C1C147C2432ED9CF61D9C6BF68C20446F8E1C144190C6DC270661C86375E7B5023C16E7144CBE5A945313E001BCDC5A99B2F87B8D8A036D2BE83EC219826ACF7BB259100BA9525F2D71E3CF666434768F72D05B57E257D6688B51E06507EF5541AE99ED9BB8C1A83A4BD7F4589691DA7A68D3B44EB945E779476B13061338FF18AA0B88BF4B557E2D7B2E36F7463B43D4FB053903ED42EEB192FD649E00200FAA15179DA494AD8198E7A4601CBF29FBE297191D026B293FE2D6F949C9D6688E283EF3C83CB896EF35DED0")]
		[DataRow(@"3A8DE03386D92C7FD22578CB1E71C417",
			@"1F86ED54BB2289F0",
			
			@"6C0962D7BD66E54FCA23C27E0F2EE84475817264DFE9EB845FA9BB1FD6FD8EE4BEFE109A878DD118506BCA4B7A32BA7811E326AFB953DC20FB3962FF6270C95E0BBDD612FF6D4E35828C812A3423483B6782CEAA0A2F552B1DBA2FFA12D89CF934BA2E017F3BB7DD10CF859FA145C1072763F23F106644791C428967D9CA5372E75A7C04FD03D72732919A2735C9B89EAD3F146CF4C25447D3885D4264689A31DACD4D8D867984CD2553B5CF2E5C07AEF3AD1D170B9EFAC2144EF7C09C0F4FAD09CCE452989A08E37E5260534B53AD0FB0238A626FF9F5913FEB452D0A47DA4D53BDC20703EBCFD6F119A37E761305FC0011978425F93595FDF250EAE2ED9B")]
		[DataRow(@"1C9240A5EB55D38AF333888604F6B5F0473917C1402B80099DCA5CBC207075C0",
				@"1C00000000000000",
				
				
		public void Test(string keyHex, string ivHex, string inputHex, string hex)
		{
			var key = keyHex.FromHex();
			var iv = ivHex.FromHex();
			Test(new BcChaCha20OriginalCrypto(key, iv), inputHex, hex);
			Test(new ChaCha20OriginalCryptoSF(key, iv), inputHex, hex);
			Test(new ChaCha20OriginalCryptoX86(key, iv), inputHex, hex);
			Test(StreamCryptoCreate.ChaCha20Original(key, iv), inputHex, hex);
		}
	}
}
